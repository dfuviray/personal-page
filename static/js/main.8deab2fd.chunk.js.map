{"version":3,"sources":["images/logo.svg","images/profile.png","components/socials.js","components/menu.js","components/sidebar.js","components/about.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Socials","className","target","href","aria-hidden","Menu","Sidebar","elem","document","querySelector","M","Sidenav","init","class","src","logo","data-target","id","Component","About","App","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"uGAAAA,EAAOC,QAAU,IAA0B,kC,4ECA3CD,EAAOC,QAAU,IAA0B,qC,sICkC5BC,EAhCC,WACd,OACE,yBAAKC,UAAU,aACb,yBAAKA,UAAU,eACb,yBAAKA,UAAU,UACb,uBACEC,OAAO,SACPC,KAAK,kDAEL,uBAAGF,UAAU,iBAAiBG,cAAY,WAG9C,yBAAKH,UAAU,UACb,uBAAGC,OAAO,SAASC,KAAK,KACtB,uBAAGF,UAAU,kBAAkBG,cAAY,WAG/C,yBAAKH,UAAU,UACb,uBAAGC,OAAO,SAASC,KAAK,+BACtB,uBAAGF,UAAU,mBAAmBG,cAAY,WAGhD,yBAAKH,UAAU,UACb,uBAAGC,OAAO,SAASC,KAAK,kCACtB,uBAAGF,UAAU,eAAeG,cAAY,cCLrCC,EAnBF,WACX,OACE,wBAAIJ,UAAU,QACZ,4BACE,uBAAGE,KAAK,KAAR,UAEF,4BACE,uBAAGA,KAAK,KAAR,WAEF,4BACE,uBAAGA,KAAK,KAAR,cAEF,4BACE,uBAAGA,KAAK,KAAR,c,gBC2BOG,E,4LAlCX,IAAIC,EAAOC,SAASC,cAAc,gBACnBC,IAAEC,QAAQC,KAAKL,EAAM,M,+BAIpC,OACE,yBAAKN,UAAU,kBACb,yBAAKA,UAAU,sCACb,yBAAKY,MAAM,aACT,uBAAGV,KAAK,GAAGU,MAAM,qBACf,yBAAKC,IAAKC,OAEZ,uBACEZ,KAAK,IACLU,MAAM,gDACNG,cAAY,eAEZ,uBAAGH,MAAM,kBAAT,WAKN,yBAAKI,GAAG,cAAchB,UAAU,yBAC9B,yBAAKA,UAAU,YACb,yBAAKa,IAAKC,IAAMd,UAAU,qCAE5B,kBAAC,EAAD,MACA,kBAAC,EAAD,Y,GA7BYiB,aCoBPC,G,MAvBD,WACZ,OACE,6BAASlB,UAAU,aACjB,yBAAKA,UAAU,mBACb,uCACA,oDACuB,6BACrB,sDAEF,8GAEW,6BAFX,oEAGa,6BAHb,2DAMA,4BAAQA,UAAU,2CAAlB,uBCHOmB,MAXf,WACE,OACE,6BACE,6BACE,kBAAC,EAAD,MACA,kBAAC,EAAD,SCGYC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,kBCTNC,IAASC,OAAO,kBAAC,EAAD,MAASnB,SAASoB,eAAe,SD0H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.8deab2fd.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.bb4d045a.svg\";","module.exports = __webpack_public_path__ + \"static/media/profile.6b58b961.png\";","import React from \"react\";\r\n\r\nconst Socials = () => {\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"row socials\">\r\n        <div className=\"col s3\">\r\n          <a\r\n            target=\"_blank\"\r\n            href=\"https://www.linkedin.com/in/deo-flauren-viray/\"\r\n          >\r\n            <i className=\"fa fa-linkedin\" aria-hidden=\"true\"></i>\r\n          </a>\r\n        </div>\r\n        <div className=\"col s3\">\r\n          <a target=\"_blank\" href=\"#\">\r\n            <i className=\"fa fa-instagram\" aria-hidden=\"true\"></i>\r\n          </a>\r\n        </div>\r\n        <div className=\"col s3\">\r\n          <a target=\"_blank\" href=\"https://github.com/dfuviray\">\r\n            <i className=\"fa fa-github-alt\" aria-hidden=\"true\"></i>\r\n          </a>\r\n        </div>\r\n        <div className=\"col s3\">\r\n          <a target=\"_blank\" href=\"https://medium.com/@deo.uviray\">\r\n            <i className=\"fa fa-medium\" aria-hidden=\"true\"></i>\r\n          </a>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Socials;\r\n","import React from \"react\";\r\n\r\nconst Menu = () => {\r\n  return (\r\n    <ul className=\"menu\">\r\n      <li>\r\n        <a href=\"#\">ABOUT</a>\r\n      </li>\r\n      <li>\r\n        <a href=\"#\">SKILLS</a>\r\n      </li>\r\n      <li>\r\n        <a href=\"#\">PORTFOLIO</a>\r\n      </li>\r\n      <li>\r\n        <a href=\"#\">CONTACT</a>\r\n      </li>\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default Menu;\r\n","import React, { Component } from \"react\";\r\nimport M from \"materialize-css/dist/js/materialize\";\r\nimport Socials from \"./socials\";\r\nimport Menu from \"./menu\";\r\nimport logo from \"../images/logo.svg\";\r\n\r\nclass Sidebar extends Component {\r\n  componentDidMount() {\r\n    var elem = document.querySelector(\"#mobile-menu\");\r\n    var instance = M.Sidenav.init(elem, {});\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"navbar-wrapper\">\r\n        <nav className=\"white z-depth-0 hide-on-large-only\">\r\n          <div class=\"container\">\r\n            <a href=\"\" class=\"brand-logo center\">\r\n              <img src={logo} />\r\n            </a>\r\n            <a\r\n              href=\"#\"\r\n              class=\"sidenav-trigger hide-on-large-only black-text\"\r\n              data-target=\"mobile-menu\"\r\n            >\r\n              <i class=\"material-icons\">menu</i>\r\n            </a>\r\n          </div>\r\n        </nav>\r\n\r\n        <div id=\"mobile-menu\" className=\"sidenav sidenav-fixed\">\r\n          <div className=\"row logo\">\r\n            <img src={logo} className=\"col s4 offset-s4 responsive-img\" />\r\n          </div>\r\n          <Socials />\r\n          <Menu />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Sidebar;\r\n","import React from \"react\";\r\nimport profilePicture from \"../images/profile.png\";\r\n\r\nconst About = () => {\r\n  return (\r\n    <section className=\"row about\">\r\n      <div className=\"col x12 m12 l12\">\r\n        <p>Hi, I am</p>\r\n        <h1>\r\n          DEO FLAUREN U. VIRAY <br />\r\n          <span>FRONT-END DEVELOPER</span>\r\n        </h1>\r\n        <p>\r\n          With 3+ years experience in web development both in public and private\r\n          sectors. <br /> Excellent coding knowledge in HTML, CSS, JavaScript,\r\n          and React. <br />A fast learner who loves to consistenly upgrade\r\n          skills.\r\n        </p>\r\n        <button className=\"btn waves-effect waves-light z-depth-0 \">\r\n          Download Resume\r\n        </button>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default About;\r\n","import React from \"react\";\nimport Sidebar from \"./components/sidebar\";\nimport About from \"./components/about\";\n\nfunction App() {\n  return (\n    <div>\n      <div>\n        <Sidebar />\n        <About />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"materialize-css/dist/css/materialize.css\";\nimport \"material-icons/iconfont/material-icons.css\";\nimport \"font-awesome/css/font-awesome.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}